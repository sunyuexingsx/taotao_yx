package com.taotao.rest.service.impl;

import org.apache.commons.lang3.StringUtils;
import org.omg.CORBA.PRIVATE_MEMBER;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.taotao.common.utils.JsonUtils;
import com.taotao.common.utils.TaotaoResult;
import com.taotao.mapper.TbItemDescMapper;
import com.taotao.mapper.TbItemMapper;
import com.taotao.pojo.TbItem;
import com.taotao.pojo.TbItemDesc;
import com.taotao.rest.dao.JedisClient;
import com.taotao.rest.service.ItemService;

@Service
public class ItemServiceImpl implements ItemService {
	
	@Autowired
	private TbItemMapper itemMapper;
	
	@Autowired
	private TbItemDescMapper descMapper;
	
	@Autowired
	private JedisClient jedisClient;
	
	@Value("${REDIS_ITEM_KEY}")
	private String REDIS_ITEM_KEY;
	
	@Value("${REDIS_ITEM_EXPIRE}")
	private Integer REDIS_ITEM_EXPIRE;
	@Override
	public TaotaoResult getItemBaseInfo(long itemId) {
		try {	
			//添加缓存逻辑
			//从缓存中取商品信息
			String json = jedisClient.get(REDIS_ITEM_KEY + ":" + itemId + ":base");
			//判断是否有值
			if(!StringUtils.isBlank(json)){
				//把json转换城java对象
				TbItem item = JsonUtils.jsonToPojo(json, TbItem.class);
				return TaotaoResult.ok(item);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		TbItem item = itemMapper.selectByPrimaryKey(itemId);
		
		try {	
			/*
			 * 把商品信息写入缓存(key的值在resouces文件找那个进行的配置 然后在进行字符串的拼接 
			 * 此拼接的格式在redis客户端中可以作为文件夹的方式显示，这样的方式便于查看和管理)
			 */
			jedisClient.set(REDIS_ITEM_KEY + ":" + itemId + ":base", JsonUtils.objectToJson(item));
			//设置key的有效期
			jedisClient.expire(REDIS_ITEM_KEY + ":" + itemId + ":base", REDIS_ITEM_EXPIRE);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return TaotaoResult.ok(item);
	}
	
	
	@Override
	public TaotaoResult getItemDesc(long itemId) {
		//添加缓存
		try {
			//添加缓存逻辑
			//从缓存中取商品信息
			String json = jedisClient.get(REDIS_ITEM_KEY + ":" + itemId + ":desc");
			//判断是否有值
			if(!StringUtils.isBlank(json)){
				//把json转换城java对象
				TbItemDesc desc = JsonUtils.jsonToPojo(json, TbItemDesc.class);
				return TaotaoResult.ok(desc);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		TbItemDesc desc = descMapper.selectByPrimaryKey(itemId);
		return TaotaoResult.ok(desc);
	}

}
